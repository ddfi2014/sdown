<?xml version="1.0"?>
<doc>
<assembly>
<name>
ServerDownHost
</name>
</assembly>
<members>
<member name="M:ServerDownHost.ServerDownHostControl.AddView(ServerDownHost.MainWindow@)">
 <summary>
 Adds a view to the list of controlled views.
 </summary>
 <param name="view"></param>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.InitializeWindow">
 <summary>
 Initializes all views.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.UpdateListBoxPosition(System.Windows.Controls.ListBox)">
 <summary>
 Updates the ListBox's position to show the most recent entry.
 </summary>
 <param name="listBox"></param>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.SetHostState(System.String)">
 <summary>
 Sets the host's state in the statusbars of all views.
 </summary>
 <param name="message"></param>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.InitializeHost">
 <summary>
 Starts the hosting.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.CloseHost">
 <summary>
 Stops the hosting.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.SetLogOn">
 <summary>
 Turns the logging process on.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.SetLogOff">
 <summary>
 Turns the logging process off.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.StartLog(System.Boolean)">
 <summary>
 Starts the logging process.
 </summary>
 <param name="isConsole"></param>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.EndLog">
 <summary>
 Stops the logging process.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.TestServers">
 <summary>
 Tests, if the specified servers are running and updates the views.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.SaveLogFile">
 <summary>
 Saves the log as a file at the default location.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.StartLogTimer">
 <summary>
 Starts the timer, that triggers an event after a specified amount of time has passed.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.StartSaveTimer">
 <summary>
 Initializes and starts the <c>saveTimer</c>.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.StopSaveTimer">
 <summary>
 Stops the <c>saveTimer</c>.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.StopLogTimer">
 <summary>
 Stops the <c>logTimer</c>.
 </summary>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.OnTimedLogEvent(System.Object,System.Timers.ElapsedEventArgs)">
 <summary>
 Calls the <c>TestServers()</c> method after being triggered by the <c>logTimer</c>.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.OnTimedSaveEvent(System.Object,System.Timers.ElapsedEventArgs)">
 <summary>
 Calls the <c>SaveLogFile()</c> method after being triggered by the <c>saveTimer</c>.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:ServerDownHost.ServerDownHostControl.UpdateListBox(ServerDownHost.MainWindow)">
 <summary>
 Updates the view's listBox.
 </summary>
 <param name="view"></param>
</member>
<member name="T:ServerDownHost.Application">
<summary>
Application
</summary>
</member>
<member name="M:ServerDownHost.Application.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="M:ServerDownHost.Application.Main">
<summary>
Application Entry Point.
</summary>
</member>
<member name="T:ServerDownHost.MainWindow">
<summary>
MainWindow
</summary>
</member>
<member name="M:ServerDownHost.MainWindow.SetControl">
 <summary>
 Registers the view at a control object.
 </summary>
</member>
<member name="M:ServerDownHost.MainWindow.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:ServerDownHost.My.MyWpfExtension">
 <summary>
 Modul zum Definieren der im My-Namespace für WPF verfügbaren Eigenschaften
 </summary>
 <remarks></remarks>
</member>
<member name="P:ServerDownHost.My.MyWpfExtension.Application">
 <summary>
 Gibt das Anwendungsobjekt für die ausgeführte Anwendung zurück.
 </summary>
</member>
<member name="P:ServerDownHost.My.MyWpfExtension.Computer">
 <summary>
 Gibt Informationen über den Hostcomputer zurück.
 </summary>
</member>
<member name="P:ServerDownHost.My.MyWpfExtension.User">
 <summary>
 Gibt Informationen über den aktuellen Benutzer zurück.  Wenn Sie die Anwendung mit den aktuellen Windows-
 Anmeldeinformationen ausführen möchten, rufen Sie My.User.InitializeWithWindowsUser() auf.
 </summary>
</member>
<member name="P:ServerDownHost.My.MyWpfExtension.Log">
 <summary>
 Gibt das Anwendungsprotokoll zurück. Die Listener können in der Konfigurationsdatei der Anwendung konfiguriert werden.
 </summary>
</member>
<member name="P:ServerDownHost.My.MyWpfExtension.Windows">
 <summary>
 Gibt die im Projekt definierte Windows-Auflistung zurück.
 </summary>
</member>
<member name="T:ServerDownHost.My.Resources.Resources">
<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member>
<member name="P:ServerDownHost.My.Resources.Resources.ResourceManager">
<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member>
<member name="P:ServerDownHost.My.Resources.Resources.Culture">
<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member>
</members>
</doc>
